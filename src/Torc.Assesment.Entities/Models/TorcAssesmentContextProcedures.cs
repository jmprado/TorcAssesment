// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;
using Torc.Assesment.Entities.Models;

namespace Torc.Assesment.Entities.Models
{
    public partial class TorcAssesmentContext
    {
        private ITorcAssesmentContextProcedures _procedures;

        public virtual ITorcAssesmentContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new TorcAssesmentContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public ITorcAssesmentContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
        }
    }

    public partial class TorcAssesmentContextProcedures : ITorcAssesmentContextProcedures
    {
        private readonly TorcAssesmentContext _context;

        public TorcAssesmentContextProcedures(TorcAssesmentContext context)
        {
            _context = context;
        }

        public virtual async Task<OrderCreated> CreateOrderAsync(int? productId, int? customerId, int? quantity, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var spReturnedValue = await _context.OrderCreated.FromSqlInterpolated<OrderCreated>($"EXEC [dbo].[CreateOrder] {productId}, {customerId}, {quantity}").ToListAsync();
            return spReturnedValue.First();
        }
    }
}
